name: CI

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    # lint:
    #     strategy:
    #         fail-fast: false
    #         matrix:
    #             linter:
    #                 - name: Flake8
    #                   run: flake8
    #                 - name: Black
    #                   run: black --check .
    #                 - name: isort
    #                   run: isort -c -v .
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v2
    #         - name: Set up Python
    #           uses: actions/setup-python@v2
    #           with:
    #               python-version: 3.8
    #         - uses: abatilo/actions-poetry@v2.1.0
    #         - name: Install Dependencies
    #           run: poetry install
    #         - name: ${{ matrix.linter.name }}
    #           run: poetry run ${{ matrix.linter.run }}

    test:
        strategy:
            fail-fast: false
            matrix:
                python-version:
                    - 3.7
                    - 3.8
                    - 3.9
                os:
                    - ubuntu-latest
                    - windows-latest
                    - macOS-latest
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - uses: abatilo/actions-poetry@v2.1.0
            - name: Install Dependencies
              run: poetry install
            - name: Test with Pytest
              run: poetry run pytest

    # docs:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v2
    #         - name: Set up Python
    #           uses: actions/setup-python@v2
    #           with:
    #               python-version: 3.8
    #         - uses: abatilo/actions-poetry@v2.1.0
    #         - name: Install Dependencies
    #           run: poetry install -E docs
    #         - name: Build docs
    #           working-directory: docs
    #           run: poetry run make html

    release:
        runs-on: ubuntu-latest
        environment: release
        if: github.ref == 'refs/heads/main'
        needs:
            - test
        #     - lint

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            # Run semantic release:
            # - Update CHANGELOG.md
            # - Update version in code
            # - Create git tag
            # - Create Github release
            # - Publish to PyPI
            - name: Python Semantic Release
              uses: relekang/python-semantic-release@master
              with:
                  github_token: ${{ secrets.GH_TOKEN }}
                  pypi_token: ${{ secrets.PYPI_TOKEN }}
